--- PageTableDuplicates.thy
+++ PageTableDuplicates.thy
@@ -2014,51 +2014,47 @@ crunches setPriority, setMCPriority
        wp: setObject_ksInterrupt updateObject_default_inv
      simp: crunch_simps)
 
+lemma installTCBCap_vs_valid_duplicates':
+  "\<lbrace>\<lambda>s. invs' s \<and> sch_act_simple s \<and> vs_valid_duplicates' (ksPSpace s) \<rbrace>
+    installTCBCap target slot n slot_opt
+   \<lbrace>\<lambda>rv s. vs_valid_duplicates' (ksPSpace s)\<rbrace>"
+  unfolding installTCBCap_def maybe_def
+  apply (wpsimp wp: checkCap_inv cteDelete_valid_duplicates'
+              simp: getThreadVSpaceRoot_def getThreadFaultHandlerSlot_def
+           | rule conjI)+
+  done
+
+lemma installTCBFrameCap_vs_valid_duplicates':
+  "\<lbrace>\<lambda>s. invs' s \<and> sch_act_simple s \<and> vs_valid_duplicates' (ksPSpace s) \<rbrace>
+   installTCBFrameCap target slot buffer
+   \<lbrace>\<lambda>rv s. vs_valid_duplicates' (ksPSpace s)\<rbrace>"
+  unfolding installTCBFrameCap_def maybe_def
+  apply (wpsimp wp: checkCap_inv hoare_weak_lift_imp cteDelete_valid_duplicates')
+  done
+
 lemma tc_valid_duplicates':
   "\<lbrace>invs' and sch_act_simple and (\<lambda>s. vs_valid_duplicates' (ksPSpace s)) and tcb_at' a and ex_nonz_cap_to' a and
     case_option \<top> (valid_cap' o fst) e' and
     K (case_option True (isCNodeCap o fst) e') and
     case_option \<top> (valid_cap' o fst) f' and
     K (case_option True (isValidVTableRoot o fst) f') and
+    case_option \<top> (valid_cap' o fst) fh' and
+    K (case_option True (isValidFaultHandler o fst) fh') and
     case_option \<top> (valid_cap') (case_option None (case_option None (Some o fst) o snd) g) and
     K (valid_option_prio d) and
     K (valid_option_prio mcp) and
     K (case_option True isArchObjectCap (case_option None (case_option None (Some o fst) o snd) g))
     and K (case_option True (swp is_aligned msg_align_bits o fst) g)\<rbrace>
-      invokeTCB (tcbinvocation.ThreadControl a sl b' mcp d e' f' g)
+      invokeTCB (tcbinvocation.ThreadControl a sl fh' mcp d e' f' g)
    \<lbrace>\<lambda>rv s. vs_valid_duplicates' (ksPSpace s)\<rbrace>"
   apply (rule hoare_gen_asm)
-  apply (simp add: split_def invokeTCB_def getThreadCSpaceRoot getThreadVSpaceRoot
-                   getThreadBufferSlot_def locateSlot_conv
-             cong: option.case_cong)
-  apply (simp only: eq_commute[where a="a"])
-  apply (rule hoare_walk_assmsE)
-    apply (clarsimp simp: pred_conj_def option.splits [where P="\<lambda>x. x s" for s])
-    apply ((wp case_option_wp threadSet_invs_trivial static_imp_wp
-               hoare_vcg_all_lift threadSet_cap_to' | clarsimp simp: inQ_def)+)[2]
-  apply (rule hoare_walk_assmsE)
-    apply (clarsimp simp: pred_conj_def option.splits [where P="\<lambda>x. x s" for s])
-    apply ((wp case_option_wp threadSet_invs_trivial static_imp_wp setMCPriority_invs'
-               typ_at_lifts[OF setMCPriority_typ_at']
-               hoare_vcg_all_lift threadSet_cap_to' | clarsimp simp: inQ_def)+)[2]
-  apply ((simp only: simp_thms cases_simp cong: conj_cong
-          | (wp cteDelete_deletes cteDelete_invs' cteDelete_sch_act_simple
-              threadSet_ipcbuffer_trivial
-              (* setPriority has no effect on vs_duplicates *)
-              case_option_wp[where m'="return ()", OF setPriority_valid_duplicates' return_inv,simplified]
-              checkCap_inv[where P="tcb_at' t" for t]
-              checkCap_inv[where P="valid_cap' c" for c]
-              checkCap_inv[where P="\<lambda>s. P (ksReadyQueues s)" for P]
-              checkCap_inv[where P="\<lambda>s. vs_valid_duplicates' (ksPSpace s)"]
-              checkCap_inv[where P=sch_act_simple] cteDelete_valid_duplicates' hoare_vcg_const_imp_lift_R
-              typ_at_lifts[OF setPriority_typ_at'] assertDerived_wp threadSet_cte_wp_at'
-              hoare_vcg_all_lift_R hoare_vcg_all_lift static_imp_wp)[1]
-          | wpc
-          | simp add: inQ_def
-          | wp hoare_vcg_conj_liftE1 cteDelete_invs' cteDelete_deletes hoare_vcg_const_imp_lift)+)
-  apply (clarsimp simp: tcb_cte_cases_def cte_level_bits_def objBits_defs
-                        tcbIPCBufferSlot_def)
-  by (auto dest!: isCapDs isReplyCapD isValidVTableRootD simp: isCap_simps)
+  apply (simp add: split_def invokeTCB_def getThreadCSpaceRoot
+                   getThreadVSpaceRoot getThreadBufferSlot_def locateSlot_conv)
+  apply (wpsimp wp: hoare_weak_lift_imp hoare_vcg_all_lift setMCPriority_invs'
+                    installTCBCap_invs' installTCBCap_sch_act_simple
+                    installTCBCap_vs_valid_duplicates' installTCBFrameCap_vs_valid_duplicates')
+  apply (auto simp: isCap_simps isValidVTableRoot_def isValidFaultHandler_def)
+  done
 
 crunches performTransfer, unbindNotification, bindNotification, setDomain
   for valid_duplicates'[wp]: "(\<lambda>s. vs_valid_duplicates' (ksPSpace s))"
