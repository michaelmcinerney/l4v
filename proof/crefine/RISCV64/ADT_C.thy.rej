--- ADT_C.thy
+++ ADT_C.thy
@@ -746,14 +746,24 @@ lemma map_to_ctes_tcb_ctes:
    apply (drule (1) ps_clear_is_aligned_ctes_None(2))+
    apply (simp add: is_aligned_add_helper[of _ 9 "0x30", simplified]
                     split_def objBits_simps')
+  apply (rule conjI)
+   apply (clarsimp simp: map_to_ctes_def Let_def fun_eq_iff)
+   apply (drule_tac x="p+0x40" in spec, simp add: objBitsKO_def)
+   apply (frule_tac s1=s in ps_clear_def3[THEN iffD1,rotated 2],
+          assumption, simp add: objBits_simps')
+   apply (frule_tac s1=s' in ps_clear_def3[THEN iffD1,rotated 2],
+          assumption, simp add: objBits_simps')
+   apply (drule (1) ps_clear_is_aligned_ctes_None(3))+
+   apply (simp add: is_aligned_add_helper[of _ 9 "0x40", simplified]
+                    split_def objBits_simps')
   apply (clarsimp simp: map_to_ctes_def Let_def fun_eq_iff)
-  apply (drule_tac x="p+0x40" in spec, simp add: objBitsKO_def)
+  apply (drule_tac x="p+0x50" in spec, simp add: objBitsKO_def)
   apply (frule_tac s1=s in ps_clear_def3[THEN iffD1,rotated 2],
          assumption, simp add: objBits_simps')
   apply (frule_tac s1=s' in ps_clear_def3[THEN iffD1,rotated 2],
          assumption, simp add: objBits_simps')
-  apply (drule (1) ps_clear_is_aligned_ctes_None(3))+
-  apply (simp add: is_aligned_add_helper[of _ 9 "0x40", simplified]
+  apply (drule (1) ps_clear_is_aligned_ctes_None(4))+
+  apply (simp add: is_aligned_add_helper[of _ 9 "0x50", simplified]
                    split_def objBits_simps')
   done
 
